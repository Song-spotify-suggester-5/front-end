{"ast":null,"code":"var _jsxFileName = \"/Users/jasonschwartz/Desktop/Lambda/BUILDWEEK2/spotify-song-suggester-5/src/components/SongCard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { AiOutlineHeart, AiFillHeart } from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst SongCard = ({\n  song\n}) => {\n  const {\n    id,\n    title,\n    artist,\n    releaseDate\n  } = song;\n  const dispatch = useDispatch();\n  const favorites = useSelector(state => state.songReducer.favorites);\n  const [clicked, setClicked] = useState(false);\n  useEffect(() => {\n    console.log({\n      favorites\n    });\n  }, [favorites]);\n\n  function addTofavorites() {\n    !favorites.includes(song) && dispatch({\n      type: 'ADD_TO_FAVORITES',\n      payload: song\n    });\n    setClicked(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"song-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"song-card-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, id), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"By: \", artist), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Released: \", releaseDate)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"song-card-features\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heart\",\n    onClick: () => addTofavorites(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AiOutlineHeart, {\n    className: `unclicked${clicked === true ? '-hide' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AiFillHeart, {\n    className: `clicked${clicked === true && '-heart'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"similar-songs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"More of this\", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDD0E\"))));\n};\n\nexport default SongCard;","map":{"version":3,"sources":["/Users/jasonschwartz/Desktop/Lambda/BUILDWEEK2/spotify-song-suggester-5/src/components/SongCard.js"],"names":["React","useEffect","useState","AiOutlineHeart","AiFillHeart","useDispatch","useSelector","SongCard","song","id","title","artist","releaseDate","dispatch","favorites","state","songReducer","clicked","setClicked","console","log","addTofavorites","includes","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,gBAA5C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,MAAqCJ,IAA3C;AACA,QAAMK,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,SAA9B,CAA7B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEN,MAAAA;AAAF,KAAZ;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;;AAIA,WAASO,cAAT,GAA0B;AACxB,KAACP,SAAS,CAACQ,QAAV,CAAmBd,IAAnB,CAAD,IAA6BK,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAEhB;AAArC,KAAD,CAArC;AACAU,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,EAAJ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAL,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASC,MAAT,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeC,WAAf,CAJF,CADF,eAQE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,OAAO,EAAE,MAAMS,cAAc,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAG,YAAWJ,OAAO,KAAK,IAAZ,GAAmB,OAAnB,GAA6B,EAAG,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAG,UAASA,OAAO,KAAK,IAAZ,IAAoB,QAAS,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAME;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CANF,CARF,CADF;AAwBD,CAvCD;;AAyCA,eAAeV,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { AiOutlineHeart, AiFillHeart } from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst SongCard = ({ song }) => {\n  const { id, title, artist, releaseDate } = song;\n  const dispatch = useDispatch();\n  const favorites = useSelector((state) => state.songReducer.favorites);\n  const [clicked, setClicked] = useState(false);\n\n  useEffect(() => {\n    console.log({ favorites });\n  }, [favorites]);\n\n  function addTofavorites() {\n    !favorites.includes(song) && dispatch({ type: 'ADD_TO_FAVORITES', payload: song });\n    setClicked(true);\n  }\n\n  return (\n    <div className=\"song-card\">\n      <div className=\"song-card-info\">\n        <p>{id}</p>\n        <h3>{title}</h3>\n        <h5>By: {artist}</h5>\n        <h5>Released: {releaseDate}</h5>\n      </div>\n\n      <div className=\"song-card-features\">\n        <div className=\"heart\" onClick={() => addTofavorites()}>\n          <AiOutlineHeart className={`unclicked${clicked === true ? '-hide' : ''}`} />\n          <AiFillHeart className={`clicked${clicked === true && '-heart'}`} />\n        </div>\n\n        <button className=\"similar-songs\">\n         More of this\n          <span role=\"img\" aria-label=\"emoji\">\n             ðŸ”Ž\n          </span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SongCard;\n"]},"metadata":{},"sourceType":"module"}